// Automatic Plant Irrigation System using PIC12F675
// Hardware: PIC12F675, Relay, Electric Valve, Moisture Sensor

#include <xc.h>

// CONFIG bits
#pragma config FOSC = INTRCIO  // Internal oscillator
#pragma config WDTE = OFF      // Watchdog Timer disabled
#pragma config PWRTE = ON      // Power-up Timer enabled
#pragma config MCLRE = OFF     // GP3 as digital input, not reset
#pragma config BOREN = ON      // Brown-out Reset enabled
#pragma config CP = OFF        // Code protection disabled
#pragma config CPD = OFF       // Data code protection disabled

#define _XTAL_FREQ 4000000     // 4 MHz internal clock

#define RELAY GP2              // Relay connected to GP2
#define SENSOR_CHANNEL 0       // Moisture sensor on AN0

void ADC_Init() {
    ANSEL = 0x01;    // GP0/AN0 as analog input
    ADCON0 = 0x81;   // ADC ON, Fosc/32, channel 0 selected
}

unsigned int ADC_Read(unsigned char channel) {
    if (channel > 3) return 0; // PIC12F675 has 4 ADC channels
    ADCON0 &= 0xC5;            // Clear channel selection
    ADCON0 |= (channel << 3);  // Select ADC channel
    __delay_ms(2);             // Acquisition time
    GO_nDONE = 1;              // Start conversion
    while (GO_nDONE);          // Wait for conversion complete
    return ((ADRESH << 8) + ADRESL); // Return 10-bit ADC result
}

void main() {
    TRISIO = 0b00000001; // GP0 as input (sensor), GP2 as output (relay)
    GPIO = 0x00;         // Clear all pins
    ADC_Init();          // Initialize ADC
    
    while (1) {
        unsigned int moisture = ADC_Read(SENSOR_CHANNEL);
        
        // Threshold for soil dryness (adjust as per calibration)
        if (moisture < 512) {   
            RELAY = 1;  // Soil is dry ? turn ON pump/valve
        } else {
            RELAY = 0;  // Soil is moist ? turn OFF pump/valve
        }
        
        __delay_ms(500); // Small delay between readings
    }
}